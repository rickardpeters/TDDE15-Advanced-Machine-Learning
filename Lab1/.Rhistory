source("~/.active-rstudio-document")
bnlearn
install.package(bnlearn)
install.packages(bnlearn)
install.packages("bnlearn")
?bnlearn
??bnlearn
library(bnlearn)
data <- data("asia")
data("asia")
?hc
hc <- hc(asia)
hc
plot(hc)
hc <- hc(asia)
plot(hc)
hc <- hc(asia)
hc <- hc(asia)
plot(hc)
hc <- hc(asia)
hc <- hc(asia)
plot(hc)
plot(hc)
hc
hc
bn(asia)
arcs(hc)
vstructs(hc)
plot(hc)
cpdag(hc)
hc
cpdag(hc)
cpdag(hc)
hc
cpdag(hc)
hc
plot(cpdag(hc))
plot(hc)
plot(cpdag(hc))
plot(hc)
plot(cpdag(hc))
hc
cpdag(hc)
all.equal(hc, cpdag(hc))
all.equal(hc, vstructs(hc))
all.equal(hc)
## hc starting with the empty graph, no edges.
hc <- hc(asia)
plot(hc)
arcs(hc)
all.equal(arcs(hc), arcs(hc))
arcs(hc)
vstructs(hc)
plot(hc)
rgraphviz.plot(hc)
graphviz.plot(hc)
plot(hc)
graphviz.plot(hc)
##plots it correctly
graphviz.plot(hc, layout=dot)
##plots it correctly
graphviz.plot(hc, layout="dot")
##plots it correctly
graphviz.plot(hc, layout="neato")
##plots it correctly
graphviz.plot(hc)
graphviz.compare(hc, cpdag(hc))
View(asia)
## So if we look at another HC with a different score:
hc.score <- hc(asia, score="loglik")
graphviz.compare(hc, hc.score)
graphviz.plot(hc.score)
## So if we look at another HC with a different score:
hc.score <- hc(asia, score="ebic")
graphviz.plot(hc.score)
graphviz.compare(hc, hc.score)
graphviz.plot(hc.score)
## So if we look at another HC with a different score:
hc.score <- hc(asia, score="bde")
graphviz.plot(hc.score)
graphviz.compare(hc, hc.score)
## So if we look at another HC with a different score:
hc.score <- hc(asia, score="bds")
graphviz.plot(hc.score)
graphviz.compare(hc, hc.score)
## So if we look at another HC with a different score:
hc.score <- hc(asia, score="loglik-g")
## So if we look at another HC with a different score:
hc.score <- hc(asia, score="aic")
graphviz.plot(hc.score)
graphviz.compare(hc, hc.score)
graphviz.plot(hc.score)
graphviz.compare(hc, hc.score)
##plots it correctly
graphviz.plot(hc)
graphviz.plot(hc.score)
graphviz.compare(hc, hc.score)
all.equal(hc, hc.score)
graphviz.plot(hc.score)
##plots it correctly
graphviz.plot(hc)
graphviz.plot(hc.score, layout="dot")
graphviz.plot(hc.score, layout="dot")
hc
hc.score
cpdag(hc.score)
##plots it correctly
graphviz.plot(hc)
arcs(hc)
graphviz.plot(hc.score, layout="dot")
arcs(hc.score)
graphviz.compare(hc, hc.score)
vstructs(hc.score)
##shows all the v-structures of the graph, ex. E->D<-B
vstructs(hc)
hc.restart <- hc(asia, restart=10)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
all.equal(hc, hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
hc.restart <- hc(asia, restart=10)
graphviz.plot(hc.restart)
graphviz.plot(hc.restart)
arcs(hc.restart)
vstructs.restart <- vstructs(hc.restart)
vs.restart <- vstructs(hc.restart)
all.equal(hc, hc.restart)
all.equal(vs.restart, vstrucs(hc))
all.equal(vs.restart, vstructs(hc))
all.equal(vs.restart, vstructs(hc.score))
hc.restart <- hc(asia, restart=100)
graphviz.plot(hc.restart)
all.equal(hc, hc.restart)
all.equal(vs.restart, vstructs(hc))
data("asia")
split <- round(nrow(asia) * 0.8)
data("asia")
split <- round(nrow(asia) * 0.8)
data <- asia[1:split,]
dag = model2network("[A][S][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
learn <- hc(data)
graphviz.plot(learn)
bn.fit(data)
bn.fit(struct)
source("C:/Users/ricka/TDDE15/Lab1/2.R")
bn.fit(struct)
pdag <- iamb(data)
pdag
graphviz.plot(pdag)
bn.fit(data)
graphviz.plot(hc.restart)
source("C:/Users/ricka/TDDE15/Lab1/1.R")
